# Stage 1: Build project files and generate assets
FROM node:16-alpine AS build

# Set CI to true to catch warnings as errors
ENV CI=true

# Install only essential system dependencies
RUN apk add --no-cache git

WORKDIR /usr/app

# Install project package dependencies
COPY package.json package-lock.json ./
RUN npm ci && rm -rf /root/.npm

# Build the project
COPY . ./
#RUN npm run build

# Stage 2: Serve static content with a minimal Nginx image
FROM nginx:alpine

# Set the working directory for Nginx
WORKDIR /usr/share/nginx/html

# Remove default Nginx configuration and add custom one
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom Nginx configuration
#COPY nginx.conf /etc/nginx/conf.d/

# Copy assets from the build stage
# COPY --from=build /usr/app/build/ /usr/share/nginx/html/


# Define a health check (if needed)
HEALTHCHECK CMD curl --fail "http://localhost" || exit 1
